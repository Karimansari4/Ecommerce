import { React, useEffect, useState } from "react";
import {Link} from "react-router-dom";
import jwt from 'jwt-decode'

//*****************************************************Degining dependency Start***********************************************//
import { AppBar, Toolbar, ListItem, Typography, Box, IconButton, Menu, Container, Avatar, Button, Tooltip, MenuItem } from '@mui/material'
import MenuIcon from '@mui/icons-material/Menu';
//*****************************************************Degining dependency End*************************************************//
    


const NavBar = () => {

//******************************************************Degining Part Start****************************************************//
    const [anchorElNav, setAnchorElNav] = useState(null);
    const [anchorElUser, setAnchorElUser] = useState(null);

    const handleOpenNavMenu = (event) => {
        setAnchorElNav(event.currentTarget)
    }
    const handleOpenUserMenu = (event) => {
        setAnchorElUser(event.currentTarget)
    }
    const handleCloseNavMenu = () => {
        setAnchorElNav(null)
    }
    const handleCloseUserMenu = () => {
        setAnchorElUser(null)
    }
//******************************************************Degining Part End******************************************************//
    
    const [user, setUser] = useState()
    // var result = false
    const getUser = () => {

        const token = localStorage.getItem("token");
        if(token){
            let decodedToken = jwt(token);
            // console.log("Decoded Token", decodedToken);
            let currentDate = new Date();

            // JWT exp is in seconds
            if (decodedToken.exp * 1000 < currentDate.getTime()) {
                // console.log("Token expired.");
                localStorage.removeItem('token')
            } else {
                console.log("Valid token");   
                // result = true;
                setUser(decodedToken.result)
            }
        }else{
            console.log('Please SignIn');
        }
    }

    useEffect(() => {
        getUser()
        
    }, [])
    return(
        <AppBar position="static">
            <Container maxWidth="xl">
                <Toolbar disableGutters>
                    <Typography variant="h6" noWrap component="div"
                        sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}
                    >
                        LOGO
                    </Typography>

                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none'} }} >
                        <IconButton size="large" aria-label="account of current user" aria-controls="menu-appbar" 
                            aria-haspopup="true" onClick={handleOpenNavMenu} color="inherit" >
                            <MenuIcon />
                        </IconButton>
                        <Menu id="menu-appbar" anchorEl={anchorElNav} style={{height: '35vh'}}
                            anchorOrigin={{ 
                                vertical: 'bottom', horizontal: 'left',
                            }} keepMounted
                            transformOrigin={{
                                vertical: 'top', horizontal: 'left',
                            }} open={Boolean(anchorElNav)} onClose={handleCloseNavMenu}
                            sx={{
                                display: { xs: 'block', md: 'none' },
                            }}
                        >
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    <Link to="/" style={{ textDecoration: 'none'}}>Home</Link>
                                </Typography>
                            </MenuItem>
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    <Link to="/dashboard" style={{ textDecoration: 'none'}}>Dashboard</Link>
                                </Typography>
                            </MenuItem>
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    <Link to="/signin" style={{ textDecoration: 'none'}}>SignIn</Link>
                                </Typography>
                            </MenuItem>
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    <Link to="/signup" style={{ textDecoration: 'none'}}>SignUp</Link>
                                </Typography>
                            </MenuItem>
                            
                        </Menu>
                    </Box>
                    <Typography variant="h6" noWrap component="div"
                        sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}
                    >
                        LOGO
                    </Typography>
                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>
                        <Button onClick={handleCloseNavMenu} sx={{ my: 2, color: 'white', display: 'block' }}>
                            <ListItem >
                                <Link to="/" style={{ color: 'white', textDecoration: 'none'}}>Home</Link>
                            </ListItem>
                        </Button>
                        <Button onClick={handleCloseNavMenu} sx={{ my: 2, color: 'white', display: 'block' }}>
                            <ListItem >
                                <Link to="/dashboard" style={{ color: 'white', textDecoration: 'none'}}>Dashboard</Link>
                            </ListItem>
                        </Button>
                        <Button onClick={handleCloseNavMenu} sx={{ my: 2, color: 'white', display: 'block' }}>
                            <ListItem >
                                <Link to="/signin" style={{ color: 'white', textDecoration: 'none'}}>SignIn</Link>
                            </ListItem>
                        </Button>
                        <Button onClick={handleCloseNavMenu} sx={{ my: 2, color: 'white', display: 'block' }}>
                            <ListItem>
                                <Link to="/signup" style={{ color: 'white', textDecoration: 'none'}}>SignUp</Link>
                            </ListItem>
                        </Button>
                        

                    </Box>

                    <Box sx={{ flexGrow: 0 }}>
                        <Tooltip title="Profile">
                            <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>
                                <Avatar alt="Karim" src={process.env.PUBLIC_URL + "/Images/karim.jpg"} />
                            </IconButton>
                        </Tooltip>
                        <Menu sx={{ mt: '45px' }} id="menu-appbar" anchorEl={anchorElUser} style={{height: '26vh',}}
                            anchorOrigin={{ vertical: 'top', horizontal: 'right'}} keepMounted
                            transformOrigin={{ vertical: 'top', horizontal: 'right'}} open={Boolean(anchorElUser)} onClose={handleCloseUserMenu}
                        >
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    Name : Karim Ansari
                                </Typography>
                            </MenuItem>
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    Email : karimansari496@gmail.com
                                </Typography>
                            </MenuItem>
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    Contact : 6201342801
                                </Typography>
                            </MenuItem>
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    Shop Name : Kurban Footware
                                </Typography>
                            </MenuItem>
                        </Menu>
                    </Box>
                </Toolbar>
            </Container>
        </AppBar>
    );
}
export default NavBar




import { BrowserRouter as Router, Route, Routes, Navigate} from "react-router-dom";
import NavBar from './components/NavBar';
import Signup from './components/Signup'
import Signin from './components/Signin'
import Dashboard from './components/Dashboard'
import Home from "./components/Home";
import Entry from "./components/Entry";
import { createContext, useEffect, useReducer, useState } from "react";
import jwtDecode from "jwt-decode";
import { initialState, reducer } from "./reducer/UseReducer";

export const UserContext = createContext()

function App() {
  
  const [state, dispatch] = useReducer(reducer, initialState)
  const [user, setUser] = useState('')

  const isLoggedIn = () => {
    const token = localStorage.getItem('token')
    if(token){
      setUser(jwtDecode(token).result)
      console.log('this is isLoggedIn');
    }else {
      console.log('this is else part of isLoggedIn');
    }
  }

  useEffect(() => {
    isLoggedIn()
  })

  const showNav = () => {
    return(
      <Router>
        <NavBar />
        <Routes>
          <Route exact path='/' element={<Home />} />
          <Route exact path="/dashboard" element={<Dashboard />} />
          <Route exact path="/entry" element={<Entry />} />
          <Route exact path="/signup" element={ <Signup /> } />
          <Route exact path="/signin" element={<Signin />} />
        </Routes>
      </Router>
    )
  }

  const something = 'this is something'
  return (
    <UserContext.Provider value={{state, dispatch}}>

      <Router>
        <NavBar />
        <Routes>
          <Route exact path='/' element={<Home />} />
          <Route exact path="/dashboard" element={<Dashboard />} />
          <Route exact path="/entry" element={<Entry />} />
          <Route exact path="/signup" element={ <Signup /> } />
          <Route exact path="/signin" element={<Signin />} />
        </Routes>
      </Router>
    </UserContext.Provider>
  );
}

export default App;




import { BrowserRouter as Router, Route, Routes} from "react-router-dom";
import NavBar from './components/NavBar';
import Signup from './components/Signup'
import Signin from './components/Signin'
import Dashboard from './components/Dashboard'
import Home from "./components/Home";
import Entry from "./components/Entry";
import { createContext, useEffect, useReducer, useState } from "react";
import jwtDecode from "jwt-decode";
import { initialState, reducer } from "./reducer/UseReducer";

export const UserContext = createContext()

function App() {
  
  const [state, dispatch] = useReducer(reducer, initialState)
  const [user, setUser] = useState('')
  // console.log("user in app: ", user);

  const isLoggedIn = () => {
    const token = localStorage.getItem('token')
    if(token){
      setUser(jwtDecode(token).result)
      // console.log('this is isLoggedIn');
    }else {
      console.log('this is else part of isLoggedIn');
    }
  }

  const getUser = () => {

    const token = localStorage.getItem("token");
    if(token){
      
        let decodedToken = jwtDecode(token);
        // console.log("Decoded Token", decodedToken);
        let currentDate = new Date();

        // JWT exp is in seconds
        if (decodedToken.exp * 1000 < currentDate.getTime()) {
            // console.log("Token expired.");
            localStorage.removeItem('token')
        } else {
            console.log("Valid token");   
            // result = true;
            setUser(decodedToken.result)
            
        }
    }else{
        console.log('Please SignIn this is navbar');
    }
}

  useEffect(() => {
    isLoggedIn()
    getUser()
  }, [state])

  return (
    <UserContext.Provider value={{state, dispatch}}>

      <Router>
        { user ? <NavBar user={user} /> : <Routes><Route exact path="/signin" element={<Signin />} /></Routes>}
        {/* <NavBar /> */}
        <Routes>
          <Route exact path='/' element={<Home user={user} />}  />
          <Route exact path="/dashboard" element={<Dashboard user={user} />}  />
          <Route exact path="/entry" element={<Entry user={user} />} />
          <Route exact path="/signup" element={ <Signup /> } />
          {/* <Route exact path="/signin" element={<Signin />} /> */}
        </Routes>
      </Router>
    </UserContext.Provider>
  );
}

export default App;



NavBar


import { React, useContext,useEffect,useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import jwtDecode from "jwt-decode";


//*****************************************************Degining dependency Start***********************************************//
import { AppBar, Toolbar, ListItem, Typography, Box, IconButton, Menu, Container, Avatar, Button, Tooltip, MenuItem, Badge } from '@mui/material'
import MenuIcon from '@mui/icons-material/Menu';
import { UserContext } from "../App";
import AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';
import ItemCard from "./itemCard";
//*****************************************************Degining dependency End*************************************************//
    


const NavBar = (props) => {

//******************************************************Degining Part Start****************************************************//
    const [anchorElNav, setAnchorElNav] = useState(null);
    const [anchorElUser, setAnchorElUser] = useState(null);

    const handleOpenNavMenu = (event) => {
        setAnchorElNav(event.currentTarget)
    }
    const handleOpenUserMenu = (event) => {
        setAnchorElUser(event.currentTarget)
    }
    const handleCloseNavMenu = () => {
        setAnchorElNav(null)
    }
    const handleCloseUserMenu = () => {
        setAnchorElUser(null)
    }
//******************************************************Degining Part End******************************************************//
    const navigate = useNavigate()

    const {state, dispatch} = useContext(UserContext)
    
    const [user, setUser] = useState(props.user)
    
    const role = props.role
    // console.log("this is role in navbar: ", role);
    const logout = () => {
        navigate('/signin')
        localStorage.removeItem('token')
        dispatch({type: "USER", payload: false})
    }
    
    
    return(
        <AppBar position="static" >
            <Container maxWidth="xl">
                <Toolbar disableGutters>
                    <Typography variant="h6" noWrap component="div"
                        sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}
                    >
                        LOGO
                    </Typography>

                    <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none'} }} >
                        <IconButton size="large" aria-label="account of current user" aria-controls="menu-appbar" 
                            aria-haspopup="true" onClick={handleOpenNavMenu} color="inherit" >
                            <MenuIcon />
                        </IconButton>
                        <Menu id="menu-appbar" anchorEl={anchorElNav} style={{height: '35vh'}}
                            anchorOrigin={{ vertical: 'bottom', horizontal: 'left', }} keepMounted
                            transformOrigin={{ vertical: 'top', horizontal: 'left', }} 
                            open={Boolean(anchorElNav)} onClose={handleCloseNavMenu}
                            sx={{ display: { xs: 'block', md: 'none' }, }}
                        >
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    <Link to="/" style={{ textDecoration: 'none'}}>Home</Link>
                                </Typography>
                            </MenuItem>
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    <Link to="/dashboard" style={{ textDecoration: 'none'}}>Dashboard</Link>
                                </Typography>
                            </MenuItem>
                            <MenuItem onClick={handleCloseNavMenu}>
                                <Typography>
                                    {role === 'admin' ? <Link to="/entry" style={{ textDecoration: 'none'}}>Goods Entery</Link> : ''}
                                </Typography>
                            </MenuItem>
                        </Menu>
                    </Box>
                    <Typography variant="h6" noWrap component="div"
                        sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}
                    >
                        LOGO
                    </Typography>
                    <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>
                        <Button onClick={handleCloseNavMenu} sx={{ my: 2, color: 'white', display: 'block' }}>
                            <ListItem >
                                <Link to="/" style={{ color: 'white', textDecoration: 'none'}}>Home</Link>
                            </ListItem>
                        </Button>
                        <Button onClick={handleCloseNavMenu} sx={{ my: 2, color: 'white', display: 'block' }}>
                            <ListItem >
                                <Link to="/dashboard" style={{ color: 'white', textDecoration: 'none'}}>Dashboard</Link>
                            </ListItem>
                        </Button>
                        <Button onClick={handleCloseNavMenu} sx={{ my: 2, color: 'white', display: 'block' }}>
                            <ListItem >
                                {role === 'admin' ? <Link to="/entry" style={{ color: 'white', textDecoration: 'none'}}>Goods Entery</Link> : ''}
                                {/* <Link to="/entry" style={{ color: 'white', textDecoration: 'none'}}>Goods Entry</Link> */}
                            </ListItem>
                        </Button>
                        {/* <MenuItem>
                                <IconButton size="large" aria-label="show 4 new mails" color="inherit">
                                <Badge badgeContent={4} color="error">
                                    <AddShoppingCartIcon />
                                </Badge>
                                </IconButton>
                                <p>Cart</p>
                            </MenuItem> */}
                    </Box>
                    {/* { user ? <ItemCard /> : ''} */}
                    {
                        user ? (<Box sx={{ flexGrow: 0 }}>
                            <Tooltip title="Profile">
                                <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>
                                    <Avatar alt="Karim" src={process.env.PUBLIC_URL + `/Users/${user.profilePicture}`} />
                                </IconButton>
                            </Tooltip>
                            
                            <Menu sx={{ mt: '45px' }} id="menu-appbar" anchorEl={anchorElUser} style={{height: '34vh',}}
                                anchorOrigin={{ vertical: 'top', horizontal: 'right'}} keepMounted
                                transformOrigin={{ vertical: 'top', horizontal: 'right'}} open={Boolean(anchorElUser)} onClose={handleCloseUserMenu}
                            >
                                <MenuItem onClick={handleCloseNavMenu}>
                                    <Typography>
                                        Name: {user.name}
                                    </Typography>
                                </MenuItem>
                                <MenuItem onClick={handleCloseNavMenu}>
                                    <Typography>
                                        Email : {user.email}
                                    </Typography>
                                </MenuItem>
                                <MenuItem onClick={handleCloseNavMenu}>
                                    <Typography>
                                        Contact : {user.contact}
                                    </Typography>
                                </MenuItem>
                                <MenuItem onClick={handleCloseNavMenu}>
                                    <Typography>
                                        Address : {user.address} 
                                    </Typography>
                                </MenuItem>
                                <MenuItem onClick={handleCloseNavMenu}>
                                    <Typography>
                                        <Button onClick={logout}>LogOut</Button>
                                    </Typography>
                                </MenuItem>
                            </Menu>
                        </Box>) : (
                            <>
                            <Button onClick={handleCloseNavMenu} sx={{ my: 2, color: 'white', display: 'block' }}>
                                <ListItem >
                                    <Link to="/signin" style={{ color: 'white', textDecoration: 'none'}}>SignIn</Link>
                                </ListItem>
                            </Button>
                            <Button onClick={handleCloseNavMenu} sx={{ my: 2, color: 'white', display: 'block' }}>
                                <ListItem>
                                    <Link to="/signup" style={{ color: 'white', textDecoration: 'none'}}>SignUp</Link>
                                </ListItem>
                            </Button>
                            </>
                        )
                    }
                    {/* { user ? <ItemCard /> : ''} */}
                </Toolbar>
            </Container>
        </AppBar>
    );
}
export default NavBar